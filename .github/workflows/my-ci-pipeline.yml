name: Continuous Integration
on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
jobs:
  todoapp-tests:
    name: Run Pytests
    runs-on: ubuntu-latest
    steps:
    -  uses: actions/checkout@v2
    -  run: docker build --target test --tag my-test-image .
    -  run: docker run my-test-image
  terraform:
    name: Build Azure Infrastructure, Docker File and Deploy
    runs-on: ubuntu-latest
    needs: todoapp-tests
    #if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_gh_client_id: ${{ secrets.GH_CLIENT_ID }}
      TF_VAR_gh_client_secret: ${{ secrets.GH_CLIENT_SECRET }}      
      TF_VAR_logging_service_token: ${{ secrets.LOGGING_SERVICE_TOKEN }}
      TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
      TF_VAR_log_level: ${{ vars.log_level}}
      TF_VAR_container_repository_server_url: ${{ vars.container_repository_server_url}}
      TF_VAR_flask_app: ${{ vars.flask_app}}
      TF_VAR_flask_env: ${{ vars.flask_env}}
      TF_VAR_websites_port: ${{ vars.websites_port}}
    steps:
    -   uses: actions/checkout@v2
    -   run: terraform init
    -   run: terraform apply -auto-approve 
    -   run: docker build --target production --tag ${{ secrets.DOCKERHUB_USERNAME }}/todoapp .
    -   run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
    -   run: docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/todoapp
    -   run: curl -dH -X POST "$(terraform output -raw cd_webhook)"